.nolist
.includepath "/usr/share/avra"
.include "m48def.inc"
.list

.dseg

.cseg
RJMP	MAIN	; RESET
RETI		; INT0
RETI		; INT1
RETI		; PCINT0
RETI		; PCINT1
RETI		; PCINT2
RETI		; WDT
RETI		; T2COMPA
RETI		; T2COMPB
RETI		; T2OVF
RETI		; T1CAPT
RETI		; T1COMPA
RETI		; T1COMPB
RETI		; T1OVF
RJMP TIMER0	; T0COMPA
RETI		; T0COMPB
RETI		; T0OVF
RETI		; SPI
RETI		; RX
RETI		; UDRE
RETI		; TX
RETI		; ADC
RETI		; EEREADY
RETI		; ANALOG COMP
RETI		; TWI
RETI		; SPM

.def	PWM_U=R10
.def	PWM_V=R11
.def    PWM_W=R12

.equ	PH_U=0x0100
.equ	PH_V=0x0101
.equ	PH_W=0x0102

.equ	PH_VAL_H=0x01
.equ	PH_VAL_L=0x03
.equ	PH_NUM=36

.equ	AMPL=PH_VAL_L+PH_NUM+2+PH_VAL_H*0x100 ; amplitude
.equ	FREQ=PH_VAL_L+PH_NUM+1+PH_VAL_H*0x100 ; interval for timer

.equ	PWM_DELAY=30

TIMER0:
	LDI R22, 0
	OUT TCNT0, R22

	LDS R22, FREQ
	OUT OCR0A, R22

	LDS R22, PH_U
	INC R22
	CPI R22, PH_NUM
	BRLO T0NU
	CLR R22
T0NU:
	STS PH_U, R22

	LDS R20, PH_V
	INC R22
	CPI R22, PH_NUM
	BRLO T0NV
	CLR R22
T0NV:
	STS PH_V, R22

	LDS R22, PH_W
	INC R22
	CPI R22, PH_NUM
	BRLO T0NW
	CLR R22
T0NW:
	STS PH_W, R22

	LDS R3, AMPL

	LDI R23, PH_VAL_L
	LDI XH,  PH_VAL_H

	LDS XL, PH_U
	ADD XL, R23
	LD R2, X
	MUL R2, R3
	MOV PWM_U, R1

	LDS XL, PH_V
	ADD XL, R23
	LD R2, X
	MUL R2, R3
	MOV PWM_V, R1

	LDS XL, PH_W
	ADD XL, R23
	LD R2, X
	MUL R2, R3
	MOV PWM_W, R1
RETI

EEREAD:
	; R17:R16
	OUT EEARL, R16
	OUT EEARH, R17
	SBI EECR, EERE	
	IN R16, EEDR
	RET

SET_TIMER:
	LDI R16, 0b00000000
	OUT TCCR0A, R16

	; prescale /1024
	LDI R16, 0b00000101
	OUT TCCR0B, R16

	LDI R16, 0b00000010
	STS TIMSK0, R16

	LDI R16, PH_NUM+1
	LDI R17, 0
	CALL EEREAD
	STS FREQ, R16
	OUT OCR0A, R16
RET

SET_PH_VAL:
	LDI R21, 0
	LDI R17, 0

	LDI XH, PH_VAL_H
	LDI XL, PH_VAL_L
READ_PHVAL:
		MOV R16, R21
		CALL EEREAD
		ST X+, R16
	INC R21
	CPI R21, PH_NUM
	BRLO READ_PHVAL

	LDI R21, 0
	STS PH_U, R21
	LDI R21, 11
	STS PH_V, R21
	LDI R21, 23
	STS PH_W, R21
RET

; R17:R16 - delay time
SLEEP:
	SUBI R16, $1
	BRCC SLEEP

	LDI R16, 255
	SUBI R17, $1
	BRCC SLEEP
RET

FLTCLR:
	LDI R16, 0b11111111
	OUT PORTD, R16

	LDI R16, 0
	LDI R17, 3
	CALL SLEEP

	LDI R16, 0b00011111
	OUT PORTD, R16

	LDI R16, 0
	LDI R17, 3
	CALL SLEEP

	LDI R16, 0b11111111
	OUT PORTD, R16

	LDI R16, 0
	LDI R17, 3
	CALL SLEEP
RET

SETUP_PORTS:
	LDI R16, 0b00000011
	OUT DDRC, R16

	LDI R16, 0b00000000
	OUT PORTC, R16

	LDI R16, 0b11111111
	OUT DDRD, R16
RET

MAIN:
	CALL SETUP_PORTS

	LDI R16, 0b00011111
	OUT PORTD, R16

	LDI R16, PH_NUM
	LDI R17, 0
	CALL EEREAD
	STS AMPL, R16

	LDI R16, PH_NUM + 1
	LDI R17, 0
	CALL EEREAD
	STS FREQ, R16
	
	CALL SET_PH_VAL
	CALL SET_TIMER

	LDI R16, 10
	MOV PWM_U, R16
	
	LDI R16, 100
	MOV PWM_V, R16
	
	LDI R16, 250
	MOV PWM_W, R16
	
;	SEI
	LOOP:
		LDI R20, 0b00000011
		OUT PORTD, R20

		CLR R17
		LDI R16, PWM_DELAY
		CALL SLEEP

		LDI R20, 0b00011100
		OUT PORTD, R20

		CLR R19 ; counter

		PWMLOOP:
			; we need fistly close top side of half-bridge
			; and only after this open bottom
			LDI R18, 0b00000000

			PWM1:
				CP  R19, PWM_U
				BRNE PWM2
				ORI R18, 0b00100000
				ANDI  R20, 0b00011000
			PWM2:
				CP  R19, PWM_V
				BRNE PWM3
				ORI R18, 0b01000000
				ANDI  R20, 0b00010100
			PWM3:
				CP  R19, PWM_W
				BRNE PWMEND
				ORI R18, 0b10000000
				ANDI  R20, 0b00001100
			PWMEND:

			OUT PORTD, R20

			CLR R17
			LDI R16, PWM_DELAY
			CALL SLEEP

			OR R20, R18
			OUT PORTD, R20

			INC R19
			CPI R19, 0
		BRNE PWMLOOP

	RJMP LOOP

END:
	NOP
	RJMP END
